diff -ru nesc-1.3.3/configure nesc-1.3.4x/configure
--- nesc-1.3.3/configure	2011-07-09 10:42:53.000000000 -0700
+++ nesc-1.3.4x/configure	2012-04-23 04:27:04.925133937 -0700
@@ -556,8 +556,8 @@
 # Identity of this package.
 PACKAGE_NAME='nesc'
 PACKAGE_TARNAME='nesc'
-PACKAGE_VERSION='1.3.3'
-PACKAGE_STRING='nesc 1.3.3'
+PACKAGE_VERSION='1.3.4x'
+PACKAGE_STRING='nesc 1.3.4x'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
diff -ru nesc-1.3.3/src/configure nesc-1.3.4x/src/configure
--- nesc-1.3.3/src/configure	2011-07-09 10:42:59.000000000 -0700
+++ nesc-1.3.4x/src/configure	2012-04-23 04:26:56.293164388 -0700
@@ -557,8 +557,8 @@
 # Identity of this package.
 PACKAGE_NAME='nesc'
 PACKAGE_TARNAME='nesc'
-PACKAGE_VERSION='1.3.3'
-PACKAGE_STRING='nesc 1.3.3'
+PACKAGE_VERSION='1.3.4x'
+PACKAGE_STRING='nesc 1.3.4x'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
diff -ru nesc-1.3.3/src/nesc-compile nesc-1.3.4x/src/nesc-compile
--- nesc-1.3.3/src/nesc-compile	2011-05-15 11:07:54.000000000 -0700
+++ nesc-1.3.4x/src/nesc-compile	2012-04-23 04:26:41.617302475 -0700
@@ -18,6 +18,15 @@
 
 use File::Basename;
 
+# Extract information from enviroment variables set by nescc
+$ctarget = $ENV{NESCC_CFILE};
+$conly = $ENV{NESCC_CONLY} eq "yes";
+$deputy = $ENV{NESCC_DEPUTY} eq "yes";
+@deputy_args = split(" ", $ENV{NESCC_DEPUTY_ARGS});
+$gcc = $ENV{NESCC_GCC};
+
+push @nesc_args, "-fnesc-gcc=$gcc";
+
 for ($i = 0; $i <= $#ARGV; $i++) {
     $_ = $ARGV[$i];
 
@@ -33,12 +42,8 @@
 	    $nocompile = 1;
 	}
 
-	if (/^-_?fnesc-conly$/) {
-	    $conly = 1;
-	}
-
 	if (/^-[_WwvpfmH]/ || /^-pedantic$/ || /^-ansi$/) {
-	    push @nesc_args, $_ unless /^-_?fnesc-.*cfile=/;
+	    push @nesc_args, $_;
 	    $verbose = 1 if /^-v/;
 	}
 
@@ -62,25 +67,13 @@
 	elsif (/^-S$/) {
 	    $asmonly = 1;
 	}
-	elsif (/^-_?fnesc-/) {
-	    if (/^-_?fnesc-cfile=(.*)$/) {
-		$ctarget = $1;
-	    }
-	    if (/^-_?fnesc-tmpcfile=(.*)$/) {
-		$ctarget = $1;
-		$delcfile = 1;
-	    }
-	    if (/^-_?fnesc-gcc=(.*)$/) {
-		$gcc = $1;
-	    }
-            if (/^-_?fnesc-deputy$/) {
-                $deputy = 1;
-            }
-            if (/^-_?fnesc-deputy-args=(.*)$/) {
-                @deputy_args = split(" ", $1);
-            }
+	elsif (/^-fnesc-tmpcfile=(.*)$/) {
+	  if ($ctarget eq "") {
+	    $ctarget = $1;
+	    $delcfile = 1;
+	  }
 	}
-	elsif (!(/^-_?W(no-)?nesc/)) {
+	else {
 	    push @gcc_args, $_;
 	}
     }
@@ -93,6 +86,12 @@
     }
 }
 
+# Split on spaces not preceded by \, then unquote.
+push @nesc_args, split(/(?<!\\) /, $ENV{NESCC_ARGS});
+foreach (@nesc_args) {
+  s/\\(.)/\1/g;
+}
+
 if ($source eq "") {
     printf STDERR "no source file specified\n";
     exit 2;
@@ -120,7 +119,7 @@
 }
 
 # Deputy annotations
-if($deputy) {
+if ($deputy) {
     unshift @nesc_args, "-fnesc-include=deputy_stage1";
     unshift @nesc_args, "-fnesc-genprefix=#include \"$ENV{NCDIR}/deputy_stage2.h\"";
 }
@@ -152,7 +151,7 @@
 }
 exit 0 if $nocompile || $conly;
 
-if($deputy) {
+if ($deputy) {
     push @deputy_args, "--gcc=$gcc";
     push @gcc_args, @deputy_args;
     $gcc = "deputy";
diff -ru nesc-1.3.3/src/tdspecs nesc-1.3.4x/src/tdspecs
--- nesc-1.3.3/src/tdspecs	2011-04-26 22:10:01.000000000 -0700
+++ nesc-1.3.4x/src/tdspecs	2012-04-23 04:26:41.617302475 -0700
@@ -1,4 +1,4 @@
 .nc: @nesc
 
 @nesc:
-perl -S nesc-compile %{_*} %{m*} %{D*&U*&A*} %{H} %{I*} %{undef} %{trigraphs} %{i*} %{nostdinc} %{a*} %{g*} %{O*} %{W*} %{w} %{S} %{pedantic*} %{std*} %{ansi} %{traditional} %{v} %{p*} %{f*} %{!fsyntax-only:%{!fnesc-cfile=*:%{!_fnesc-cfile=*:-fnesc-tmpcfile=%g.c}} %{S:%W{o*}%{!o*:-o %b.s}}%{!S:%{c:%W{o*}%{!o*:-o %w%b%O}}%{!c:-o %d%w%u%O}}} %{fsyntax-only:-o %j} %{-param*} %i -_ASM %Y
+perl -S nesc-compile %{m*} %{D*&U*&A*} %{H} %{I*} %{undef} %{trigraphs} %{i*} %{nostdinc} %{a*} %{g*} %{O*} %{W*} %{w} %{S} %{pedantic*} %{std*} %{ansi} %{traditional} %{v} %{p*} %{f*} %{!fsyntax-only:-fnesc-tmpcfile=%g.c %{S:%W{o*}%{!o*:-o %b.s}}%{!S:%{c:%W{o*}%{!o*:-o %w%b%O}}%{!c:-o %d%w%u%O}}} %{fsyntax-only:-o %j} %{-param*} %i -_ASM %Y
diff -ru nesc-1.3.3/tools/nescc.in nesc-1.3.4x/tools/nescc.in
--- nesc-1.3.3/tools/nescc.in	2008-06-18 10:17:22.000000000 -0700
+++ nesc-1.3.4x/tools/nescc.in	2012-04-23 04:30:03.374846480 -0700
@@ -32,55 +32,71 @@
 $ENV{"NCDIR"} = $NCDIR;
 
 # Have fun with the arguments
+
 $gcc = "gcc";
 
+undef $ENV{NESCC_ARGS};
+undef $ENV{NESCC_CFILE};
+undef $ENV{NESCC_CONLY};
+undef $ENV{NESCC_DEPUTY};
+undef $ENV{NESCC_DEPUTY_ARGS};
+undef $ENV{NESCC_GCC};
+
 for ($i = 0; $i <= $#ARGV; $i++) {
-    $strip = 0;
     $_ = $ARGV[$i];
     if (/^-/) {
+	if (/^-v$/) {
+	    $verbose = 1;
+	}
+
 	if (/^-docdir=(.*)/) {
             $docdir = $1;
-	    $strip = 1;
-	}
-	elsif (/^-topdir=(.*)/) {
+	} elsif (/^-topdir=(.*)/) {
             push @topdirs, $1;
-	    $strip = 1;
-	}
-	elsif (/^-graphviz=(.*)/) {
+	} elsif (/^-graphviz=(.*)/) {
             if($1 =~ /^y/i) {
                 $use_graphviz = 1;
             } else {
                 $use_graphviz = 0;
             }
-	    $strip = 1;
-	}
-	elsif (/^--version$/) {
+	} elsif (/^--version$/) {
 	    $print_version = 1;
-	    $strip = 1;
-	}
-	elsif (/^-gcc=(.*)/) {
-	    $gcc = $1;
-	    $strip = 1;
-	}
-	elsif (/^-mingw-gcc$/) {
+	} elsif (/^-(fnesc-)?gcc=(.*)/) {
+	    $gcc = $2;
+	} elsif (/^-mingw-gcc$/) {
 	    $mingw_gcc = 1;
-	    $strip = 1;
-	    push @new_args, "-fnesc-mingw-gcc";
-	}
-	elsif (/^-v$/) {
-	    $verbose = 1;
-	}
-	elsif (/^-conly$/) {
-	    $strip = 1;
-	    push @new_args, "-fnesc-conly";
-	    push @new_args, "-fsyntax-only";
+	    push @nescc_args, "-fnesc-mingw-gcc";
+	} elsif (/^-conly$/) {
+	    $ENV{NESCC_CONLY} = "yes";
+	    push @nescc_args, "-fsyntax-only";
+	} elsif (/^-fnesc-cfile=(.*)$/) {
+	    $ENV{NESCC_CFILE} = $1;
+	} elsif (/^-_?fnesc-deputy$/) {
+	    $ENV{NESCC_DEPUTY} = "yes";
+	} elsif (/^-_?fnesc-deputy-args=(.*)$/) {
+	    $ENV{NESCC_DEPUTY_ARGS} = $1;
+	} elsif (/^(-(f|W|Wno-)nesc.*)$/) {
+	    # Don't confuse the non-nesC frontends with our -f and -W
+	    # flags (these were ignored in earlier C/etc frontends,
+	    # but current ones give error messages, preventing nescc
+	    # from compiling C files)
+	    push @nescc_args, $1;
+	} elsif (/^-([IDUAo])/) {
+	    $opt = $1;
+	    ($i, $val) = &extractarg($i);
+	    push @new_args, "-$opt$val";
+	} elsif (/^(-include|-idirafter|-imacro|-iprefix|-iwithprefix|-iwithprefixbefore|-isystem|-isysroot|-X[a-zA-Z]*|--param)$/) {
+	    $opt = $1;
+	    ($i, $arg) = &nextarg($i);
+	    push @new_args, $opt, $arg;
+	} else {
+	    push @new_args, $_;
 	}
-    } 
-
-    push @new_args, $_ if !$strip;
+    } else {
+	push @new_args, $_;
+    }
 }
 
-
 if ($verbose || $print_version) {
     print "nescc: @PACKAGE_VERSION@\n";
 }
@@ -115,62 +131,59 @@
 
 # Base network type definitions
 unshift @new_args, "-I$NCDIR";
-unshift @new_args, "-fnesc-include=nesc_nx";
+unshift @nescc_args, "-fnesc-include=nesc_nx";
 
 #
 # documentation generation options
 #
-if( defined($docdir) ) {
+if (defined($docdir)) {
     # add the doc output dir
-    push @new_args, "-fnesc-docdir=$docdir";
+    push @nescc_args, "-fnesc-docdir=$docdir";
     
     # add top level dirs, to strip out of package names
     foreach my $dir (@topdirs) {
-        push @new_args, "-fnesc-topdir=$dir";
+        push @nescc_args, "-fnesc-topdir=$dir";
     }
 
     # add graphviz option
-    if( defined($use_graphviz) ) {
-        push @new_args, "-fnesc-docs-use-graphviz" if($use_graphviz);
+    if (defined($use_graphviz)) {
+        push @nescc_args, "-fnesc-docs-use-graphviz" if $use_graphviz;
     } else {
-        my $dot = `which dot 2>&1`;
-        push @new_args, "-fnesc-docs-use-graphviz" if($dot !~ /^\s*$/);
+        local $dot = `which dot 2>&1`;
+        push @nescc_args, "-fnesc-docs-use-graphviz" if $dot !~ /^\s*$/;
     }
 }
 
-
 unshift @new_args, "-specs=$NCDIR/tdspecs";
-unshift @new_args, "-fnesc-gcc=$gcc";
 unshift @new_args, $gcc;
 
 if ($mingw_gcc) {
     # Yuck. Convert unix paths to windows paths
-    $ENV{"NCDIR"} = &winpath($ENV{"NCDIR"});
+    $ENV{NCDIR} = &winpath($ENV{NCDIR});
+    $ENV{NESCC_CFILE} = &winpath($ENV{NESCC_CFILE});
     @ARGV = @new_args;
     @new_args = ();
     for ($i = 0; $i <= $#ARGV; $i++) {
 	$_ = $ARGV[$i];
 	if (/^-/) {
-	    if (/^-[oIL]/) {
+	    if (/^-([oIL])/) {
 		# convert argument filename which may be in same arg
-		$opt = substr $_, 1, 1;
+		$opt = $1;
 		($i, $file) = &extractarg($i);
 		$file = &winpath($file);
 		push @new_args, "-$opt$file";
 	    }
-	    elsif (/^-[xubV]/) {
+	    elsif (/^-([xubV])/) {
 		# pass option and arg through unchanged
-		$opt = substr $_, 1, 1;
+		$opt = $1;
 		($i, $arg) = &extractarg($i);
 		push @new_args, "-$opt$arg";
 	    }
-	    elsif ($i < $#ARGV &&
-		(/^-idirafter$/ || /^-include$/ || /^-imacros$/ ||
-		 /^-iprefix$/ || /^-iwithprefix$/ || /^-iwithprefixbefore$/ ||
-		 /^-isystem$/ || /^-Xlinker$/)) {
+	    elsif (/^(-include|-idirafter|-imacro|-iprefix|-iwithprefix|-iwithprefixbefore|-isystem|-isysroot|-Xlinker)/) {
 		# convert argument filename which is in next arg
-		push @new_args, $_;
-		push @new_args, &winpath($ARGV[++$i]);
+		$opt = $1;
+		($i, $arg) = &nextarg($i);
+		push @new_args, $opt, &winpath($arg);
 	    }
 	    elsif (/^-specs=(.*)$/) {
 		# convert argument filename
@@ -187,30 +200,60 @@
     }
 }
 
-# Don't confuse the non-nesC frontends with our -f and -W flags
-# (these were ignored in earlier C/etc frontends, but current ones give
-# error messages, preventing nescc from compiling C files)
-map { s/-((f|W|Wno-)nesc)/-_\1/; $_; } @new_args;
+foreach (@nescc_args) {
+    $_ = quotemeta $_;
+    s/\\([-=,\.\/])/\1/g;
+}
+    
+$ENV{NESCC_ARGS} = join(' ', @nescc_args);
+$ENV{NESCC_GCC} = $gcc;
+
+printenv("NCDIR");
+printenv("NESCC_ARGS");
+printenv("NESCC_CFILE");
+printenv("NESCC_CONLY");
+printenv("NESCC_DEPUTY");
+printenv("NESCC_DEPUTY_ARGS");
+printenv("NESCC_GCC");
 
 print STDERR join(' ', @new_args), "\n" if $verbose;
 exec @new_args;
 print STDERR "Couldn't execute $gcc\n";
 exit 2;
 
+sub printenv {
+    local ($s) = @_;
+
+    print STDERR "$s=\"$ENV{$s}\"\n" if $verbose && defined($ENV{$s});
+}
+
 sub extractarg {
     local ($i) = @_;
 
     if (length($ARGV[$i]) == 2) {
-	$arg = $ARGV[++$i];
+	return &nextarg($i);
     }
     else {
 	$arg = substr($ARGV[$i], 2);
+	return ($i, $arg);
+    }
+}
+
+sub nextarg {
+    local ($i) = @_;
+
+    if ($i < $#ARGV) {
+	$arg = $ARGV[++$i];
+    }
+    else {
+	printf STDERR "missing argument to $ARGV[$i]\n";
+	exit 2;
     }
     return ($i, $arg);
 }
 
 sub winpath {
-    my ($path) = @_;
+    local ($path) = @_;
     $path = `cygpath -w $path`;
     chop $path;
 
